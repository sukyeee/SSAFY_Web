/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-15 13:51:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import map.dto.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/jsp/./header.jsp", Long.valueOf(1665841850188L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("map.dto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic+Coding&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/index.css\" />\r\n");
      out.write("<script src=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js\"></script>\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css\"/>\r\n");
      out.write("<!-- Default theme -->\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css\"/>\r\n");
      out.write("<!-- Semantic UI theme -->\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/semantic.min.css\"/>\r\n");
      out.write("<!-- Bootstrap theme -->\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.min.css\"/>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("  	");
      out.write("\r\n");
      out.write(" \r\n");

    String contextPath = request.getContextPath();
	UserDto userDto = (UserDto)session.getAttribute("userDto");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic+Coding&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( contextPath );
      out.write("/css/header.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-light bg-light\">\r\n");
      out.write("\r\n");
      out.write("      <div id=\"nav-menu\">\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"nav-menu-left\">\r\n");
      out.write("		 		<button class=\"btn btn-sm btn-outline-secondary\" id=\"homeBtn\"><a href=\"");
      out.print( contextPath );
      out.write("/jsp/index.jsp\">Home</a></button>\r\n");
      out.write("			</div>\r\n");
      out.write("  			<div id=\"nav-menu-right\">\r\n");
      out.write("  				");
 if( userDto == null) { 
      out.write("\r\n");
      out.write("	  			<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"login-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/index.jsp\">login</a></button>\r\n");
      out.write("		       	<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"register-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/register.jsp\">register</a></button>\r\n");
      out.write("		        ");
 } else { 
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	            <button class=\"btn btn-sm btn-outline-secondary parking\" ><a  id=\"searchBtn\" onclick=\"search()\" href=\"./map/mapMain.jsp\">Search</a> </button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary parking\"> <a  aria-current=\"page\" id=\"parking\" href=\"");
      out.print(contextPath );
      out.write("/jsp/map/mapParking.jsp\">Favorite Area Parking Info</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"logout\"href=\"#\">logout</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"myPage\" href=\"");
      out.print(contextPath );
      out.write("/user/userMain\">mypage</a></button>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("  				");
 } 
      out.write("\r\n");
      out.write("  			</div>\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("            <!-- 로그인 전 -->\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            	\r\n");
      out.write("   		</div>\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write(" \r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	document.querySelector(\"#logout\").onclick = function(){\r\n");
      out.write("		logout();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	async function logout(){\r\n");
      out.write("	let url = \"");
      out.print( contextPath);
      out.write("/logout\";\r\n");
      out.write("	\r\n");
      out.write("	try{\r\n");
      out.write("	    let response = await fetch( url ); \r\n");
      out.write("	    let data = await response.json(); \r\n");
      out.write("	    if( data.result == \"fail\"){ \r\n");
      out.write("	      window.location.href = \"");
      out.print( contextPath);
      out.write("/jsp/login.jsp\";\r\n");
      out.write("	    }else if( data.result == \"fail\"){\r\n");
      out.write("	    	alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	    }            	\r\n");
      out.write("	}catch(error){\r\n");
      out.write("		alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"header-main\">\r\n");
      out.write("\r\n");
      out.write("            <!-- <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpBikJfmp4hdfGgW8rF5vhgNYDgv1KE6X1_w&usqp=CAU\" alt=\"\" style=\"width: 95%; height: 400px; margin-top: 2rem; margin-left: 2.5%\"> -->\r\n");
      out.write("            <img class=\"header-main-img\" src=\"../img/house.jpg\" alt=\"\">\r\n");
      out.write("            <div class=\"header-main-img-black\"> </div>\r\n");
      out.write("            <div class=\"main-title\">\r\n");
      out.write("              <div class=\"main-title-content\">\r\n");
      out.write("                <p></p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </img>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"header-menu\">\r\n");
      out.write("              <!-- <img class = \"logo\" style=\"width: 20rem; padding-left: 3rem\" src=\"http://www.newsworker.co.kr/news/photo/202204/153752_169267_517.png\" class=\"card-img-top\" alt=\"...\"> -->\r\n");
      out.write("            \r\n");
      out.write("              <div class=\"header-menu-right\">\r\n");
      out.write("                <a href=\"#\"></a>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("       \r\n");
      out.write("    </header>\r\n");
      out.write("    \r\n");
      out.write("    <main>\r\n");
      out.write("        <div class=\"main-top\">\r\n");
      out.write("          \r\n");
      out.write("            \r\n");
      out.write("         </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"main-bottom\">\r\n");
      out.write("          <div class=\"row col-md-8 justify-content-center mb-2\">\r\n");
      out.write("     \r\n");
      out.write("             <form class=\"d-flex\">\r\n");
      out.write("		    </form>\r\n");
      out.write("		    \r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("                <!-- 이벤트 상세정보 modal -->\r\n");
      out.write("		  <div id=\"detail-modal\" class=\"modal fade\" id=\"detail-modal\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n");
      out.write("		    <div class=\"modal-dialog\">\r\n");
      out.write("		      <div class=\"modal-content\">\r\n");
      out.write("		        <div class=\"modal-header\">\r\n");
      out.write("		          <h5 class=\"modal-title\" id=\"staticBackdropLabel\">상세정보</h5>\r\n");
      out.write("		          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("		        </div>\r\n");
      out.write("		        <div id=\"modal-body\">\r\n");
      out.write("		          ...\r\n");
      out.write("		        </div>\r\n");
      out.write("		        <div class=\"modal-footer\">\r\n");
      out.write("		            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("        			<button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n");
      out.write("		        </div>\r\n");
      out.write("		      </div>\r\n");
      out.write("		    </div>\r\n");
      out.write("		  </div>\r\n");
      out.write("      \r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("    <div id=\"board-list\" class=\"footer-card\">\r\n");
      out.write("  		");
 if( userDto.getUserEmail().equals("admin") ) { 
      out.write("\r\n");
      out.write("		<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"eventSetting\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/board/boardMain.jsp\">이벤트 관리</a></button>\r\n");
      out.write("      ");
 } 
      out.write("\r\n");
      out.write("	    <table class=\"table table-hover\">\r\n");
      out.write("	  <tbody>\r\n");
      out.write("	<!--      <tr data-eventKey=\"1\">\r\n");
      out.write("	      <td>Event1</td>\r\n");
      out.write("	      <td>0000.00.00 ~ 0000.00.00</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    <tr data-eventKey=\"2\">\r\n");
      out.write("	      <td>Event2</td>\r\n");
      out.write("	      <td>0000.00.00 ~ 0000.00.00</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    -->\r\n");
      out.write("	  </tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("  </footer>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- container -->\r\n");
      out.write("  </body>\r\n");
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("  const LIST_ROW_COUNT = 5;\r\n");
      out.write("  const OFFSET = 0;\r\n");
      out.write("\r\n");
      out.write("	   	function search() {\r\n");
      out.write("		     var keyword = document.querySelector(\"#searchInputText\");\r\n");
      out.write("			 sessionStorage.setItem(\"keyword\", keyword);\r\n");
      out.write("	   	}\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  //////////////////////////////////////////////////////////\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  window.onload = function(){\r\n");
      out.write("		boardList();\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("  async function boardList() {\r\n");
      out.write("			let url = '");
      out.print(contextPath);
      out.write("/board/boardListCustomer';\r\n");
      out.write("			let urlParams = '?limit=' + LIST_ROW_COUNT + '&offset=' + OFFSET;\r\n");
      out.write("		let fetchOptions = {\r\n");
      out.write("					method: 'GET',\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			try {\r\n");
      out.write("				let response = await fetch( url + urlParams, fetchOptions );\r\n");
      out.write("				let data = await response.json();\r\n");
      out.write("\r\n");
      out.write("				makeListHtml( data );\r\n");
      out.write("			} catch( error ) {\r\n");
      out.write("				console.log(error);\r\n");
      out.write("				alertify.error('이벤트 조회 과정에서 문제가 생겼습니다.');\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("  \r\n");
      out.write("  function makeListHtml(list){\r\n");
      out.write("		let listHtml = ``;\r\n");
      out.write("		\r\n");
      out.write("		list.forEach( el => {\r\n");
      out.write("\r\n");
      out.write("			let eventKey = el.eventKey;\r\n");
      out.write("			let name = el.name;\r\n");
      out.write("			let startDateTime = el.startDateTime;\r\n");
      out.write("			let endDateTime = el.endDateTime;\r\n");
      out.write("			\r\n");
      out.write("			listHtml += \r\n");
      out.write("				`\r\n");
      out.write("					    <tr data-eventKey=\"${eventKey}\">\r\n");
      out.write("	      <td>${name}</td>\r\n");
      out.write("	      <td>${startDateTime} ~ ${endDateTime}</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("			`;\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		if(listHtml.length == 0)\r\n");
      out.write("			document.querySelector(\"#board-list > table > tbody\").innerHTML = \"진행중인 이벤트가 없습니다.\";\r\n");
      out.write("		else {\r\n");
      out.write("			document.querySelector(\"#board-list > table > tbody\").innerHTML = listHtml;\r\n");
      out.write("			makeListHtmlEventHandler(list);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("  function makeListHtmlEventHandler(list){\r\n");
      out.write("		document.querySelectorAll(\"#board-list > table > tbody > tr\").forEach( el => {\r\n");
      out.write("			el.onclick = function(){\r\n");
      out.write("				let no = this.getAttribute(\"data-eventKey\");\r\n");
      out.write("				\r\n");
      out.write("				let url = '");
      out.print( contextPath);
      out.write("/board/boardPage';\r\n");
      out.write("				let urlParams = '?eventKey=' + no;\r\n");
      out.write("				\r\n");
      out.write("				window.location.href=url+urlParams;\r\n");
      out.write("					//fetch( url + urlParams, fetchOptions );\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				//window.location.href=\"");
      out.print( contextPath);
      out.write("/boardPage\";\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("  </script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
