/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-15 09:24:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import map.dto.*;

public final class userMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/jsp/./header.jsp", Long.valueOf(1665825200375L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("map.dto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>info</title>\r\n");
      out.write("    <link\r\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    />\r\n");
      out.write("    <link\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css\"\r\n");
      out.write("    />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./style.css\" type=\"text/css\" />\r\n");
      out.write("    \r\n");
      out.write("    <!-- JavaScript -->\r\n");
      out.write("        <script src=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("        <!-- CSS -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css\" />\r\n");
      out.write("        <!-- Default theme -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css\" />\r\n");
      out.write("        <!-- Semantic UI theme -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/semantic.min.css\" />\r\n");
      out.write("        <!-- Bootstrap theme -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.min.css\" />\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./css/style.css\" type=\"text/css\" />\r\n");
      out.write("    \r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write(" \r\n");

    String contextPath = request.getContextPath();
	UserDto userDto = (UserDto)session.getAttribute("userDto");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic+Coding&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( contextPath );
      out.write("/css/header.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-light bg-light\">\r\n");
      out.write("\r\n");
      out.write("      <div id=\"nav-menu\">\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"nav-menu-left\">\r\n");
      out.write("		 		<button class=\"btn btn-sm btn-outline-secondary\" id=\"homeBtn\"><a href=\"");
      out.print( contextPath );
      out.write("/jsp/index.jsp\">Home</a></button>\r\n");
      out.write("			</div>\r\n");
      out.write("  			<div id=\"nav-menu-right\">\r\n");
      out.write("  				");
 if( userDto == null) { 
      out.write("\r\n");
      out.write("	  			<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"login-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/index.jsp\">login</a></button>\r\n");
      out.write("		       	<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"register-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/register.jsp\">register</a></button>\r\n");
      out.write("		        ");
 } else { 
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary parking\"> <a  aria-current=\"page\" id=\"parking\" href=\"");
      out.print(contextPath );
      out.write("/jsp/map/mapParking.jsp\">Favorite Area Parking Info</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"logout\"href=\"#\">logout</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"myPage\" href=\"");
      out.print(contextPath );
      out.write("/user/userMain\">mypage</a></button>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("  				");
 } 
      out.write("\r\n");
      out.write("  			</div>\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("            <!-- 로그인 전 -->\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            	\r\n");
      out.write("   		</div>\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write(" \r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	document.querySelector(\"#logout\").onclick = function(){\r\n");
      out.write("		logout();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	async function logout(){\r\n");
      out.write("	let url = \"");
      out.print( contextPath);
      out.write("/logout\";\r\n");
      out.write("	\r\n");
      out.write("	try{\r\n");
      out.write("	    let response = await fetch( url ); \r\n");
      out.write("	    let data = await response.json(); \r\n");
      out.write("	    if( data.result == \"fail\"){ \r\n");
      out.write("	      window.location.href = \"");
      out.print( contextPath);
      out.write("/jsp/login.jsp\";\r\n");
      out.write("	    }else if( data.result == \"fail\"){\r\n");
      out.write("	    	alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	    }            	\r\n");
      out.write("	}catch(error){\r\n");
      out.write("		alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- 상단 navbar end -->\r\n");
      out.write("    <!-- 중앙 content start -->\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("      <div style=\"height: 70px\"></div>\r\n");
      out.write("      <h2 class=\"text-center mt-5 mb-3\">내 정보</h2>\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("         <table class=\"table\">\r\n");
      out.write("			  <thead>\r\n");
      out.write("			    <tr>\r\n");
      out.write("			      <th scope=\"col\">이메일</th>\r\n");
      out.write("			      <th scope=\"col\">비밀번호</th>\r\n");
      out.write("			      <th scope=\"col\">이름</th>\r\n");
      out.write("			    </tr>\r\n");
      out.write("			  </thead>\r\n");
      out.write("			  <tbody id=\"userTbody\">\r\n");
      out.write("			    <tr>\r\n");
      out.write("			      <td></td>\r\n");
      out.write("			      <td></td>\r\n");
      out.write("			      <td></td>\r\n");
      out.write("			    </tr>\r\n");
      out.write("			  </tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("           	<button id=\"btnChangePassword\" type=\"button\" class=\"btn btn-sm btn-primary\">비밀번호 변경</button>\r\n");
      out.write("           	<button id=\"btnDeleteUser\" type=\"button\" class=\"btn btn-sm btn-warning\">탈퇴하기</button>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <hr>\r\n");
      out.write("      </div>\r\n");
      out.write("            <!-- Modal Update-->\r\n");
      out.write("        <div class=\"modal fade\" id=\"UserUpdateModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("          <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("              <h5 class=\"modal-title\" id=\"exampleModalLabel\">비밀번호 수정</h5>\r\n");
      out.write("              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">            \r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"titleUpdate\" class=\"form-label\">현재 비밀번호</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"currentPassword\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"contentUpdate\" class=\"form-label\">바꿀 비밀번호</label>\r\n");
      out.write("                    <textarea class=\"form-control\" id=\"nextPassword\" rows=\"1\"></textarea>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <button id=\"btnUserUpdate\" type=\"button\" class=\"btn btn-sm btn-primary float-end\">수정</button>\r\n");
      out.write("            </div>            \r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    <!-- 중앙 content end -->\r\n");
      out.write("    <footer\r\n");
      out.write("      class=\"navbar navbar-expand-lg navbar-light bg-light container justify-content-end fixed-bottom bottom-0\"\r\n");
      out.write("    >\r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("        <ul class=\"navbar-nav\">\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">사이트 소개</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">개인정보처리방침</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">이용약관</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">오시는길</a></li>\r\n");
      out.write("          <li><label class=\"nav-link text-secondary\">&copy; SaveHomes Corp.</label></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <script\r\n");
      out.write("      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("      integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\"\r\n");
      out.write("      crossorigin=\"anonymous\">\r\n");
      out.write("    </script>\r\n");
      out.write("    <script>\r\n");
      out.write("	window.onload = function(){\r\n");
      out.write("			userInfo();\r\n");
      out.write("	}\r\n");
      out.write("		async function userInfo(){\r\n");
      out.write("    		let url = '");
      out.print( contextPath );
      out.write("/user/userInfo';\r\n");
      out.write("    		console.log(url);\r\n");
      out.write("    		let fetchOptions = {\r\n");
      out.write("    			method: 'GET',\r\n");
      out.write("    		}\r\n");
      out.write("    		\r\n");
      out.write("    		try{\r\n");
      out.write("    			\r\n");
      out.write("    			let response = await fetch( url, fetchOptions);\r\n");
      out.write("    			console.log(response);\r\n");
      out.write("    			let data = await response.json();\r\n");
      out.write("    			console.log( data );\r\n");
      out.write("    			makeListHtml( data );\r\n");
      out.write("    		}catch( error ){\r\n");
      out.write("          console.log(error);\r\n");
      out.write("          alertify.alert(\"오류\",'정보를 불러오지 못하였습니다.')\r\n");
      out.write("    		}\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	// javascript array 를 이용해서 테이블 <tr> 을 반복적으로 만들어서 목록을 완성\r\n");
      out.write("    	function makeListHtml( list ){\r\n");
      out.write("    		console.log(list);\r\n");
      out.write("    		let listHtml = ``;\r\n");
      out.write("    			listHtml +=\r\n");
      out.write("    				`<tr><td id=\"userEmail\">${list.userEmail}</td><td>${list.userPassword}</td><td>${list.userName}</td></tr>`;\r\n");
      out.write("    \r\n");
      out.write("    		document.querySelector(\"#userTbody\").innerHTML = listHtml;\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("		document.querySelector(\"#btnChangePassword\").onclick = function(){\r\n");
      out.write("			let modalUpdate = new bootstrap.Modal(\r\n");
      out.write("					document.querySelector(\"#UserUpdateModal\")\r\n");
      out.write("			);\r\n");
      out.write("			modalUpdate.show();\r\n");
      out.write("		}\r\n");
      out.write("    	\r\n");
      out.write("		document.querySelector(\"#btnUserUpdate\").onclick = function(){\r\n");
      out.write("			userUpdate();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("        async function userUpdate(){\r\n");
      out.write("        	let userEmail = document.querySelector(\"#userEmail\").value;\r\n");
      out.write("        	let userPassword = document.querySelector(\"#currentPassword\").value;\r\n");
      out.write("            let nextPassword = document.querySelector(\"#nextPassword\").value;\r\n");
      out.write("\r\n");
      out.write("            // parameter \r\n");
      out.write("            let urlParams = new URLSearchParams({\r\n");
      out.write("            	userEmail: userEmail,\r\n");
      out.write("            	userPassword: userPassword,\r\n");
      out.write("            	nextPassword: nextPassword\r\n");
      out.write("            });\r\n");
      out.write("            // fetch options\r\n");
      out.write("            let fetchOptions = {\r\n");
      out.write("              method: \"POST\",\r\n");
      out.write("              body: urlParams\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            let url = \"");
      out.print( contextPath);
      out.write("/user/userUpdate\";\r\n");
      out.write("            try{\r\n");
      out.write("                let response = await fetch( url, fetchOptions);\r\n");
      out.write("                let data = await response.json(); // json => javascript object <= JSON.parse()\r\n");
      out.write("                if( data.result == \"success\"){ // login.jsp => boardMain.jsp 로 페이지 이동 ( 새로운 페이지(html....) 요청)\r\n");
      out.write("                	alertify.alert(\"성공\",'비밀번호가 변경되었습니다..');\r\n");
      out.write("                  userInfo();\r\n");
      out.write("                }else if( data.result == \"fail\"){\r\n");
      out.write("                	alertify.alert(\"오류\",'비밀번호가 변경 과정에서 오류가 발생했습니다.');\r\n");
      out.write("                }            	\r\n");
      out.write("            }catch(error){\r\n");
      out.write("            	alertify.alert(\"오류\",'글 수정 과정에서 오류가 발생했습니다.');\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("		 document.querySelector(\"#btnDeleteUser\").onclick = function(){\r\n");
      out.write("					alertify.confirm(\"삭제 확인\", \"정말 탈퇴하실겁니까?\", \r\n");
      out.write("							function(){\r\n");
      out.write("								console.log(\"sss\");\r\n");
      out.write("								userDelete();\r\n");
      out.write("							}, \r\n");
      out.write("							function(){\r\n");
      out.write("								console.log('user cancel');\r\n");
      out.write("							});	\r\n");
      out.write("		} \r\n");
      out.write("		\r\n");
      out.write("    async function userDelete(){\r\n");
      out.write(" \r\n");
      out.write("            let url = \"");
      out.print( contextPath);
      out.write("/user/userDelete\";\r\n");
      out.write("          \r\n");
      out.write("            \r\n");
      out.write("            try{\r\n");
      out.write("                let response = await fetch( url ); // default GET\r\n");
      out.write("                let data = await response.json(); // json => javascript object <= JSON.parse()\r\n");
      out.write("                if( data.result == \"success\"){ // login.jsp => boardMain.jsp 로 페이지 이동 ( 새로운 페이지(html....) 요청)\r\n");
      out.write("                  alertify.success(\"성공\",'탈퇴되었습니다.');\r\n");
      out.write("                  logout();\r\n");
      out.write("                }else if( data.result == \"fail\"){\r\n");
      out.write("                	console.log(\"fail'\")\r\n");
      out.write("              	  alertify.alert(\"오류\",'탈퇴과정에서 오류가 발생했습니다.');\r\n");
      out.write("                }            	\r\n");
      out.write("            }catch(error){\r\n");
      out.write("            	console.log(error)\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
