/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-15 13:52:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import map.dto.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/jsp/./header.jsp", Long.valueOf(1665841850188L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("map.dto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>login</title>\r\n");
      out.write("\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/style.css\" type=\"text/css\" />\r\n");
      out.write("     <!-- JavaScript -->\r\n");
      out.write("        <script src=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("        <!-- CSS -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css\" />\r\n");
      out.write("        <!-- Default theme -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css\" />\r\n");
      out.write("        <!-- Semantic UI theme -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/semantic.min.css\" />\r\n");
      out.write("        <!-- Bootstrap theme -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.min.css\" />\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- \r\n");
      out.write("  <nav class=\"navbar navbar-expand-lg navbar-light bg-light shadow fixed-top\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <a class=\"navbar-brand text-primary fw-bold\" href=\"#\">\r\n");
      out.write("        구해줘 홈즈\r\n");
      out.write("      </a>\r\n");
      out.write("      <button\r\n");
      out.write("        class=\"navbar-toggler\"\r\n");
      out.write("        type=\"button\"\r\n");
      out.write("        data-bs-toggle=\"collapse\"\r\n");
      out.write("        data-bs-target=\"#navbarSupportedContent\"\r\n");
      out.write("        aria-controls=\"navbarSupportedContent\"\r\n");
      out.write("        aria-expanded=\"false\"\r\n");
      out.write("        aria-label=\"Toggle navigation\"\r\n");
      out.write("      >\r\n");
      out.write("        <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("      </button>\r\n");
      out.write("      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("        <ul class=\"navbar-nav me-auto mb-lg-0\">\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </nav>\r\n");
      out.write("  <hr>\r\n");
      out.write("  <hr>\r\n");
      out.write("  <hr>\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      out.write(" \r\n");

    String contextPath = request.getContextPath();
	UserDto userDto = (UserDto)session.getAttribute("userDto");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic+Coding&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( contextPath );
      out.write("/css/header.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-light bg-light\">\r\n");
      out.write("\r\n");
      out.write("      <div id=\"nav-menu\">\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"nav-menu-left\">\r\n");
      out.write("		 		<button class=\"btn btn-sm btn-outline-secondary\" id=\"homeBtn\"><a href=\"");
      out.print( contextPath );
      out.write("/jsp/index.jsp\">Home</a></button>\r\n");
      out.write("			</div>\r\n");
      out.write("  			<div id=\"nav-menu-right\">\r\n");
      out.write("  				");
 if( userDto == null) { 
      out.write("\r\n");
      out.write("	  			<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"login-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/index.jsp\">login</a></button>\r\n");
      out.write("		       	<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"register-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/register.jsp\">register</a></button>\r\n");
      out.write("		        ");
 } else { 
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	            <button class=\"btn btn-sm btn-outline-secondary parking\" ><a  id=\"searchBtn\" onclick=\"search()\" href=\"./map/mapMain.jsp\">Search</a> </button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary parking\"> <a  aria-current=\"page\" id=\"parking\" href=\"");
      out.print(contextPath );
      out.write("/jsp/map/mapParking.jsp\">Favorite Area Parking Info</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"logout\"href=\"#\">logout</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"myPage\" href=\"");
      out.print(contextPath );
      out.write("/user/userMain\">mypage</a></button>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("  				");
 } 
      out.write("\r\n");
      out.write("  			</div>\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("            <!-- 로그인 전 -->\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            	\r\n");
      out.write("   		</div>\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write(" \r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	document.querySelector(\"#logout\").onclick = function(){\r\n");
      out.write("		logout();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	async function logout(){\r\n");
      out.write("	let url = \"");
      out.print( contextPath);
      out.write("/logout\";\r\n");
      out.write("	\r\n");
      out.write("	try{\r\n");
      out.write("	    let response = await fetch( url ); \r\n");
      out.write("	    let data = await response.json(); \r\n");
      out.write("	    if( data.result == \"fail\"){ \r\n");
      out.write("	      window.location.href = \"");
      out.print( contextPath);
      out.write("/jsp/login.jsp\";\r\n");
      out.write("	    }else if( data.result == \"fail\"){\r\n");
      out.write("	    	alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	    }            	\r\n");
      out.write("	}catch(error){\r\n");
      out.write("		alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("    	\r\n");
      out.write("        <div class=\"row\" style=\"height:85vh;\">\r\n");
      out.write("            <div class=\"col-3\"></div>\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("              <h2 class=\"text-center mt-5 mb-3\">로그인</h2>\r\n");
      out.write("                <form>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                      <label for=\"exampleInputEmail1\"  class=\"form-label\">ID</label>\r\n");
      out.write("                      <input type=\"text\" class=\"form-control\" id=\"userEmail\" aria-describedby=\"emailHelp\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n");
      out.write("                      <input type=\"password\" class=\"form-control\"id=\"userPassword\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3 form-check\">\r\n");
      out.write("                      <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n");
      out.write("                      <label class=\"form-check-label\" for=\"exampleCheck1\">자동로그인</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <button type=\"button\" id=\"btnLogin\" class=\"btn btn-primary\">Login</button>\r\n");
      out.write("					<a href=\"./register.jsp\" class=\"btn\">회원가입</a>\r\n");
      out.write("        \r\n");
      out.write("                  </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-3\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <footer class=\"navbar navbar-expand-lg navbar-light bg-light container justify-content-end\">\r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("        <ul class=\"navbar-nav\">\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">사이트 소개</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">개인정보처리방침</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">이용약관</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">오시는길</a></li>\r\n");
      out.write("          <li><label class=\"nav-link text-secondary\">&copy; SaveHomes Corp.</label></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <script>\r\n");
      out.write("          window.onload = function () {\r\n");
      out.write("            document.querySelector(\"#btnLogin\").onclick = function () {\r\n");
      out.write("               //유효성 검사 => Post\r\n");
      out.write("              if (validate()) {\r\n");
      out.write("            	  console.log(\"여기\")\r\n");
      out.write("                login();\r\n");
      out.write("              } else {\r\n");
      out.write("                //유효성 검사 실패에 대한 UI 처리\r\n");
      out.write("                alertify.alert(\"오류\",\"아이디 또는 패스워드를 확인하세요\");\r\n");
      out.write("              }\r\n");
      out.write("            };\r\n");
      out.write("            \r\n");
      out.write("        \r\n");
      out.write("            \r\n");
      out.write("          };\r\n");
      out.write("          \r\n");
      out.write("       \r\n");
      out.write("    \r\n");
      out.write("          function validate() {\r\n");
      out.write("            let isUserEmailValid = false;\r\n");
      out.write("            let isUserPasswordValid = false;\r\n");
      out.write("            \r\n");
      out.write("            let userEmailValue = document.querySelector(\"#userEmail\").value;\r\n");
      out.write("              if(userEmailValue.length > 0){	\r\n");
      out.write("            	  isUserEmailValid = true;\r\n");
      out.write("              }\r\n");
      out.write("            \r\n");
      out.write("            let userPassword = document.querySelector(\"#userPassword\").value;\r\n");
      out.write("              if(userPassword.length > 0){\r\n");
      out.write("            	  isUserPasswordValid = true;\r\n");
      out.write("              }\r\n");
      out.write("            \r\n");
      out.write("            if(isUserEmailValid && isUserPasswordValid){\r\n");
      out.write("              return true;\r\n");
      out.write("            }\r\n");
      out.write("            return false;\r\n");
      out.write("          }\r\n");
      out.write("    \r\n");
      out.write("          async function login() {\r\n");
      out.write("            //validate()\r\n");
      out.write("    \r\n");
      out.write("            let userEmailValue = document.querySelector(\"#userEmail\").value;\r\n");
      out.write("            let userPasswordValue = document.querySelector(\"#userPassword\").value;\r\n");
      out.write("    \r\n");
      out.write("            let urlParams = new URLSearchParams({\r\n");
      out.write("              userEmail : userEmailValue,\r\n");
      out.write("              userPassword : userPasswordValue\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            let fetchOptions = {\r\n");
      out.write("              method : \"POST\",\r\n");
      out.write("              body:urlParams\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            let response = await fetch(\"");
      out.print( contextPath);
      out.write("/login\",fetchOptions);\r\n");
      out.write("            let data = await response.json();\r\n");
      out.write("            if(data.result==\"success\"){// login.jsp => boardMain.jsp\r\n");
      out.write("              window.location.href=\"");
      out.print( contextPath);
      out.write("/jsp/map/mapMain.jsp\"\r\n");
      out.write("            }\r\n");
      out.write("            else if(data.result == 'fail'){\r\n");
      out.write("            	alertify.alert(\"오류\",\"아이디 또는 패스워드를 확인하세요\");\r\n");
      out.write("            }\r\n");
      out.write("          }\r\n");
      out.write("    \r\n");
      out.write("        </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
