/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-15 14:08:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import map.dto.*;
import map.dto.*;

public final class boardMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/jsp/board/../header.jsp", Long.valueOf(1665841850188L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("map.dto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"\r\n");
      out.write("	integrity=\"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\"\r\n");
      out.write("	integrity=\"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- JavaScript -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css\" />\r\n");
      out.write("<!-- Default theme -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css\" />\r\n");
      out.write("<!-- Semantic UI theme -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/semantic.min.css\" />\r\n");
      out.write("<!-- Bootstrap theme -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.min.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  	");
      out.write("\r\n");
      out.write(" \r\n");

    String contextPath = request.getContextPath();
	UserDto userDto = (UserDto)session.getAttribute("userDto");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic+Coding&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( contextPath );
      out.write("/css/header.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-light bg-light\">\r\n");
      out.write("\r\n");
      out.write("      <div id=\"nav-menu\">\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"nav-menu-left\">\r\n");
      out.write("		 		<button class=\"btn btn-sm btn-outline-secondary\" id=\"homeBtn\"><a href=\"");
      out.print( contextPath );
      out.write("/jsp/index.jsp\">Home</a></button>\r\n");
      out.write("			</div>\r\n");
      out.write("  			<div id=\"nav-menu-right\">\r\n");
      out.write("  				");
 if( userDto == null) { 
      out.write("\r\n");
      out.write("	  			<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"login-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/index.jsp\">login</a></button>\r\n");
      out.write("		       	<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"register-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/register.jsp\">register</a></button>\r\n");
      out.write("		        ");
 } else { 
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	            <button class=\"btn btn-sm btn-outline-secondary parking\" ><a  id=\"searchBtn\" onclick=\"search()\" href=\"./map/mapMain.jsp\">Search</a> </button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary parking\"> <a  aria-current=\"page\" id=\"parking\" href=\"");
      out.print(contextPath );
      out.write("/jsp/map/mapParking.jsp\">Favorite Area Parking Info</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"logout\"href=\"#\">logout</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"myPage\" href=\"");
      out.print(contextPath );
      out.write("/user/userMain\">mypage</a></button>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("  				");
 } 
      out.write("\r\n");
      out.write("  			</div>\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("            <!-- 로그인 전 -->\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            	\r\n");
      out.write("   		</div>\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write(" \r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	document.querySelector(\"#logout\").onclick = function(){\r\n");
      out.write("		logout();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	async function logout(){\r\n");
      out.write("	let url = \"");
      out.print( contextPath);
      out.write("/logout\";\r\n");
      out.write("	\r\n");
      out.write("	try{\r\n");
      out.write("	    let response = await fetch( url ); \r\n");
      out.write("	    let data = await response.json(); \r\n");
      out.write("	    if( data.result == \"fail\"){ \r\n");
      out.write("	      window.location.href = \"");
      out.print( contextPath);
      out.write("/jsp/login.jsp\";\r\n");
      out.write("	    }else if( data.result == \"fail\"){\r\n");
      out.write("	    	alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	    }            	\r\n");
      out.write("	}catch(error){\r\n");
      out.write("		alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h4 class=\"text-center mt-3\">이벤트 목록</h4>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"input-group mb-3 mt-5\">\r\n");
      out.write("			<input type=\"text\" class=\"form-control\" id=\"inputSearchWord\"\r\n");
      out.write("				placeholder=\"Search\" />\r\n");
      out.write("			<button class=\"btn btn-light\" type=\"button\" id=\"btnSearchWord\">\r\n");
      out.write("				🔍</button>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<table class=\"table table-hover\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th scope=\"col\">#</th>\r\n");
      out.write("					<th scope=\"col\">제목</th>\r\n");
      out.write("					<th scope=\"col\">작성일자</th>\r\n");
      out.write("					<th scope=\"col\">조회수</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody id=\"boardTbody\">\r\n");
      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"paginationWrapper\"></div>\r\n");
      out.write("\r\n");
      out.write("		<button class=\"btn btn-primary\" type=\"button\" id=\"btnInsertPage\">\r\n");
      out.write("			글쓰기</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- Modal insert -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"boardInsertModal\" tabindex=\"-1\"\r\n");
      out.write("		aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog modal-lg\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h5 class=\"modal-title\" id=\"exampleModalLabel\">🎨이벤트 등록🎨</h5>\r\n");
      out.write("					<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("						aria-label=\"Close\"></button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<form>\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"titleInsert\" class=\"form-label\">제목</label> <input\r\n");
      out.write("								type=\"text\" class=\"form-control\" id=\"titleInsert\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"contentInsert\" class=\"form-label\">내용</label>\r\n");
      out.write("							<textarea class=\"form-control\" id=\"contentInsert\" rows=\"10\"></textarea>\r\n");
      out.write("						</div>\r\n");
      out.write("						<button id=\"btnBoardInsert\" type=\"button\"\r\n");
      out.write("							class=\"btn btn-sm btn-primary float-end\">등록</button>\r\n");
      out.write("\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- Modal Detail -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"boardDetailModal\" tabindex=\"-1\"\r\n");
      out.write("		aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog modal-lg\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h5 class=\"modal-title\" id=\"exampleModalLabel\">🎨이벤트 상세보기🎨</h5>\r\n");
      out.write("					<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("						aria-label=\"Close\"></button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<table class=\"table table-hover\">\r\n");
      out.write("						<tbody>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>글 번호</td>\r\n");
      out.write("								<td id=\"boardIdDetail\">#</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>제목</td>\r\n");
      out.write("								<td id=\"titleDetail\">#</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>내용</td>\r\n");
      out.write("								<td id=\"contentDetail\">#</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>작성자</td>\r\n");
      out.write("								<td id=\"userNameDetail\">#</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>작성일시</td>\r\n");
      out.write("								<td id=\"regDtDetail\">#</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>조회수</td>\r\n");
      out.write("								<td id=\"readCountDetail\">#</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</tbody>\r\n");
      out.write("					</table>\r\n");
      out.write("\r\n");
      out.write("					<button id=\"btnBoardUpdateForm\" type=\"button\"\r\n");
      out.write("						class=\"btn btn-sm btn-primary float-end\">수정</button>\r\n");
      out.write("					<button id=\"btnBoardDeleteConfirm\" type=\"button\"\r\n");
      out.write("						class=\"btn btn-sm btn-warning float-end\">삭제</button>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- Modal update-->\r\n");
      out.write("	<div class=\"modal fade\" id=\"boardUpdateModal\" tabindex=\"-1\"\r\n");
      out.write("		aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog modal-lg\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h5 class=\"modal-title\" id=\"exampleModalLabel\">🔧이벤트 수정🔨</h5>\r\n");
      out.write("					<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("						aria-label=\"Close\"></button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<form>\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"titleUpdate\" class=\"form-label\">제목</label> <input\r\n");
      out.write("								type=\"text\" class=\"form-control\" id=\"titleUpdate\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"contentUpdate\" class=\"form-label\">내용</label>\r\n");
      out.write("							<textarea class=\"form-control\" id=\"contentUpdate\" rows=\"10\"></textarea>\r\n");
      out.write("						</div>\r\n");
      out.write("						<button id=\"btnBoardUpdate\" type=\"button\"\r\n");
      out.write("							class=\"btn btn-sm btn-primary float-end\">수정</button>\r\n");
      out.write("\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script src=\"");
      out.print(contextPath);
      out.write("/js/util.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		var OFFSET = 0;\r\n");
      out.write("		var SEARCH_WORD = '';\r\n");
      out.write("		\r\n");
      out.write("		// pagination\r\n");
      out.write("		var LIST_ROW_COUNT = 10; // limit\r\n");
      out.write("		var PAGE_LINK_COUNT = 3; // pagination link 갯수\r\n");
      out.write("		var CURRENT_PAGE_INDEX = 1;\r\n");
      out.write("		var TOTAL_LIST_ITEM_COUNT = 0; // 총 건수\r\n");
      out.write("		\r\n");
      out.write("   		window.onload = function() {\r\n");
      out.write("   			\r\n");
      out.write("   			boardList(); // 백엔드를 갔다와서 수행, 비동기 통신이므로 비동기 통신 하자마자 makeListHtmlEventHandler 클릭하면 반응없음   			\r\n");
      out.write("   			// makeListHtmlEventHandler();\r\n");
      out.write("   			\r\n");
      out.write("   			document.querySelector(\"#btnSearchWord\").onclick = function() {\r\n");
      out.write("   				SEARCH_WORD = document.querySelector(\"#inputSearchWord\").value;\r\n");
      out.write("   				// 초기화\r\n");
      out.write("   				OFFSET = 0;\r\n");
      out.write("   				CURRENT_PAGE_INDEX = 1;\r\n");
      out.write("   				boardList();\r\n");
      out.write("   			}\r\n");
      out.write("   			\r\n");
      out.write("   			// insert page\r\n");
      out.write("   			// javascript로 bootstrap modal 제어\r\n");
      out.write("   			document.querySelector(\"#btnInsertPage\").onclick = function() {\r\n");
      out.write("   				\r\n");
      out.write("   				document.querySelector(\"#titleInsert\").value = \"\";\r\n");
      out.write("   				document.querySelector(\"#contentInsert\").value = \"\";\r\n");
      out.write("   				\r\n");
      out.write("   				\r\n");
      out.write("   				let modal = new bootstrap.Modal(\r\n");
      out.write("   					document.querySelector(\"#boardInsertModal\")\r\n");
      out.write("   				);\r\n");
      out.write("   				\r\n");
      out.write("   				modal.show();\r\n");
      out.write("   			}\r\n");
      out.write("   			\r\n");
      out.write("   			// insert\r\n");
      out.write("			document.querySelector(\"#btnBoardInsert\").onclick = function() {\r\n");
      out.write("   				\r\n");
      out.write("				\r\n");
      out.write("				if(validateInsert()){\r\n");
      out.write("					boardInsert();\r\n");
      out.write("				}else{\r\n");
      out.write("					alertify.error(\"입력을 확인해 주세요.\");\r\n");
      out.write("				}\r\n");
      out.write("			};\r\n");
      out.write("			\r\n");
      out.write("			// delete\r\n");
      out.write("			document.querySelector(\"#btnBoardDeleteConfirm\").onclick = function() {\r\n");
      out.write("				alertify.confirm(\"삭제 확인\", \"글을 삭제하시겠습니까?\", \r\n");
      out.write("						function(){\r\n");
      out.write("							// ok\r\n");
      out.write("							boardDelete();\r\n");
      out.write("\r\n");
      out.write("						},\r\n");
      out.write("						function(){\r\n");
      out.write("							console.log('user cancel');		\r\n");
      out.write("						});\r\n");
      out.write("			};\r\n");
      out.write("		\r\n");
      out.write("			// update\r\n");
      out.write("			document.querySelector(\"#btnBoardUpdateForm\").onclick = function() {\r\n");
      out.write("			\r\n");
      out.write("				// detail => update 글 상세 내용을 복사 ( key 인 boardId 를 복사 )\r\n");
      out.write("				// detail modal 닫고 update modal 을 띄운다.\r\n");
      out.write("				let boardId = document.querySelector(\"#boardDetailModal\").getAttribute(\"data-boardId\");\r\n");
      out.write("	   			document.querySelector(\"#boardUpdateModal\").setAttribute(\"data-boardId\", boardId);\r\n");
      out.write("	\r\n");
      out.write("	   			document.querySelector(\"#titleUpdate\").value = document.querySelector(\"#titleDetail\").innerHTML;\r\n");
      out.write("	   			document.querySelector(\"#contentUpdate\").value = document.querySelector(\"#contentDetail\").innerHTML;\r\n");
      out.write("	   			\r\n");
      out.write("	   			let modalDetail = new bootstrap.Modal(\r\n");
      out.write("	   					document.querySelector(\"#boardDetailModal\")\r\n");
      out.write("	   				);\r\n");
      out.write("	   				\r\n");
      out.write("	   			modalDetail.hide();\r\n");
      out.write("	   			\r\n");
      out.write("	   			let modalUpdate = new bootstrap.Modal(\r\n");
      out.write("	   					document.querySelector(\"#boardUpdateModal\")\r\n");
      out.write("	   				);\r\n");
      out.write("	   				\r\n");
      out.write("	   			modalUpdate.show();\r\n");
      out.write("	   			\r\n");
      out.write("   			} \r\n");
      out.write("			\r\n");
      out.write("			document.querySelector(\"#btnBoardUpdate\").onclick = function() {\r\n");
      out.write("				if(validateUpdate()){\r\n");
      out.write("					boardUpdate();\r\n");
      out.write("				}else{\r\n");
      out.write("					alertify.error(\"입력을 확인해 주세요.\");\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("			// logout\r\n");
      out.write("			document.querySelector(\"#btnLogout\").onclick = function() {\r\n");
      out.write("				logout();\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("   \r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("   		// GET\r\n");
      out.write("   		async function boardList() {\r\n");
      out.write("   			let url = '");
      out.print(contextPath);
      out.write("/board/boardList';\r\n");
      out.write("   			let urlParams = '?limit=' + LIST_ROW_COUNT + '&offset=' + OFFSET  + '&searchWord=' + SEARCH_WORD;\r\n");
      out.write("   			//let urlParams = `?limit=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${LIST_ROW_COUNT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&offset=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${OFFSET}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`; // jsp EL표기법과 javascript es6 literal template와 충돌.\r\n");
      out.write("			let fetchOptions = {\r\n");
      out.write("   					method: 'GET',\r\n");
      out.write("   			}\r\n");
      out.write("   			\r\n");
      out.write("   			try {\r\n");
      out.write("   				let response = await fetch( url + urlParams, fetchOptions );\r\n");
      out.write("   				let data = await response.json();\r\n");
      out.write("   				console.log( data )\r\n");
      out.write("   				makeListHtml( data );\r\n");
      out.write("   				\r\n");
      out.write("   				\r\n");
      out.write("   			} catch( error ) {\r\n");
      out.write("   				console.log(error);\r\n");
      out.write("   				alertify.error('글 조회 과정에서 문제가 생겼습니다.');\r\n");
      out.write("   			}\r\n");
      out.write("   		}\r\n");
      out.write("   		\r\n");
      out.write("   	\r\n");
      out.write("		\r\n");
      out.write("   		// javascript array를 이용해서 테이블 <tr> 을 반복적으로 만들어서 목록을 완성\r\n");
      out.write("   		function makeListHtml( list ){\r\n");
      out.write("   			let listHtml = ``;\r\n");
      out.write("   			\r\n");
      out.write("   			list.forEach( el => {\r\n");
      out.write("   				\r\n");
      out.write("   				console.log(el);\r\n");
      out.write("   				\r\n");
      out.write("   				let boardId = el.eventKey;\r\n");
      out.write("   				let userName = el.name;\r\n");
      out.write("   				let title = el.name;\r\n");
      out.write("   				let regDt = el.registerDateTime;\r\n");
      out.write("   				let regDtStr = el.registerDateTime;\r\n");
      out.write("   				let readCount = \"0\";\r\n");
      out.write("   	   			\r\n");
      out.write("   				listHtml += \r\n");
      out.write("   					`<tr style=\"cursor:pointer\" data-boardId=${boardId}>\r\n");
      out.write("   				<td>${boardId}</td>\r\n");
      out.write("   				<td>${title}</td>\r\n");
      out.write("   				<td>${regDtStr}</td>\r\n");
      out.write("   				<td>${readCount}</td>\r\n");
      out.write("   					</tr>`;\r\n");
      out.write("   			});\r\n");
      out.write("   			\r\n");
      out.write("   			document.querySelector(\"#boardTbody\").innerHTML = listHtml;\r\n");
      out.write("   			makeListHtmlEventHandler();\r\n");
      out.write("   			boardListTotalCnt();\r\n");
      out.write("   		}\r\n");
      out.write("   		\r\n");
      out.write("   		\r\n");
      out.write("   		function makeListHtmlEventHandler() {\r\n");
      out.write("   			document.querySelectorAll(\"#boardTbody tr\").forEach( el => {\r\n");
      out.write("   				el.onclick = function() {\r\n");
      out.write("   					let boardId = this.getAttribute(\"data-boardId\");\r\n");
      out.write("   					boardDetail(boardId);\r\n");
      out.write("   				}\r\n");
      out.write("   			})\r\n");
      out.write("\r\n");
      out.write("   			\r\n");
      out.write("   		}\r\n");
      out.write("   		\r\n");
      out.write("   		\r\n");
      out.write("		async function boardListTotalCnt() {\r\n");
      out.write("   			let url = '");
      out.print(contextPath);
      out.write("/board/boardListTotalCnt';\r\n");
      out.write("   			let urlParams = '?searchWord=' + SEARCH_WORD;\r\n");
      out.write("   			//let urlParams = `?limit=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${LIST_ROW_COUNT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&offset=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${OFFSET}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`; // jsp EL표기법과 javascript es6 literal template와 충돌.\r\n");
      out.write("			let fetchOptions = {\r\n");
      out.write("   					method: 'GET',\r\n");
      out.write("   			}\r\n");
      out.write("   			\r\n");
      out.write("   			try {\r\n");
      out.write("   				let response = await fetch( url + urlParams, fetchOptions );\r\n");
      out.write("   				let data = await response.json();\r\n");
      out.write("   				console.log( data )\r\n");
      out.write("   				TOTAL_LIST_ITEM_COUNT = data.totalCnt;\r\n");
      out.write("   			\r\n");
      out.write("   				console.log(LIST_ROW_COUNT);\r\n");
      out.write("   				console.log(PAGE_LINK_COUNT);\r\n");
      out.write("   				console.log(CURRENT_PAGE_INDEX);\r\n");
      out.write("   				console.log(TOTAL_LIST_ITEM_COUNT);\r\n");
      out.write("   				\r\n");
      out.write("   				\r\n");
      out.write("   				makePaginationHtml( LIST_ROW_COUNT, PAGE_LINK_COUNT, CURRENT_PAGE_INDEX, TOTAL_LIST_ITEM_COUNT,  \"paginationWrapper\" );\r\n");
      out.write("   				\r\n");
      out.write("   			} catch( error ) {\r\n");
      out.write("   				console.log(error);\r\n");
      out.write("   				alertify.error('글 조회 과정에서 문제가 생겼습니다.');\r\n");
      out.write("   			}\r\n");
      out.write("   		}\r\n");
      out.write("   		\r\n");
      out.write("   		function movePage(pageIndex){\r\n");
      out.write("   			OFFSET = (pageIndex - 1) * LIST_ROW_COUNT;\r\n");
      out.write("   			CURRENT_PAGE_INDEX = pageIndex;\r\n");
      out.write("   			boardList();\r\n");
      out.write("   		}\r\n");
      out.write("   		\r\n");
      out.write("   	  async function boardDetail(boardId) {\r\n");
      out.write("          let url = '");
      out.print(contextPath);
      out.write("/board/boardDetail';\r\n");
      out.write("          let urlParams = '?boardId=' + boardId;\r\n");
      out.write("          //let urlParams = ?limit=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${LIST_ROW_COUNT}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&offset=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${OFFSET}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("; // jsp EL표기법과 javascript es6 literal template와 충돌.\r\n");
      out.write("           let fetchOptions = {\r\n");
      out.write("              method: 'GET',\r\n");
      out.write("              }\r\n");
      out.write("\r\n");
      out.write("          try {\r\n");
      out.write("              let response = await fetch( url + urlParams, fetchOptions );\r\n");
      out.write("              let data = await response.json();\r\n");
      out.write("              console.log( data )\r\n");
      out.write("              makeDetailHtml( data );\r\n");
      out.write("\r\n");
      out.write("          } catch( error ) {\r\n");
      out.write("              console.log(error);\r\n");
      out.write("              alertify.error('글 조회 과정에서 문제가 생겼습니다.');\r\n");
      out.write("          }\r\n");
      out.write("      }\r\n");
      out.write("   		\r\n");
      out.write("   		function makeDetailHtml( detail ){\r\n");
      out.write("		\r\n");
      out.write("   			console.log(detail);\r\n");
      out.write("   			\r\n");
      out.write("			let boardId = detail.eventKey;\r\n");
      out.write("			let userName = detail.registerId;\r\n");
      out.write("			let title = detail.name;\r\n");
      out.write("			let content = detail.name;\r\n");
      out.write("			let regDt = detail.registerDateTime;\r\n");
      out.write("			let regDtStr =  detail.registerDateTime;\r\n");
      out.write("				// makeDateStr(regDt.date.year, regDt.date.month, regDt.date.day, '/') + ' ' + \r\n");
      out.write("				// makeTimeStr(regDt.time.hour, regDt.time.minute, regDt.time.second, ':');\r\n");
      out.write("			let readCount = \"0\";\r\n");
      out.write("			let sameUser = detail.sameUser;\r\n");
      out.write(" 	   	\r\n");
      out.write("			\r\n");
      out.write("			document.querySelector(\"#boardDetailModal\").setAttribute(\"data-boardId\", boardId);\r\n");
      out.write("   	    	document.querySelector(\"#boardIdDetail\").innerHTML = boardId;\r\n");
      out.write("   	    	document.querySelector(\"#titleDetail\").innerHTML = title;\r\n");
      out.write("   	    	document.querySelector(\"#contentDetail\").innerHTML = content;\r\n");
      out.write("   	    	document.querySelector(\"#userNameDetail\").innerHTML = userName;\r\n");
      out.write("   	    	document.querySelector(\"#regDtDetail\").innerHTML = regDtStr;\r\n");
      out.write("   	 		document.querySelector(\"#readCountDetail\").innerHTML = readCount;\r\n");
      out.write("   	    	\r\n");
      out.write("   	\r\n");
      out.write("   	 		let modal = new bootstrap.Modal(\r\n");
      out.write("					document.querySelector(\"#boardDetailModal\")\r\n");
      out.write("				);\r\n");
      out.write("				\r\n");
      out.write("			modal.show();\r\n");
      out.write("			\r\n");
      out.write("	\r\n");
      out.write("			\r\n");
      out.write("   		}\r\n");
      out.write("   		///////////////////////////////////////\r\n");
      out.write("        function validateInsert(){\r\n");
      out.write("            // return true / false\r\n");
      out.write("            let isTitleInsertValid = false;\r\n");
      out.write("            let isContentInsertValid = false;\r\n");
      out.write("\r\n");
      out.write("            let titleInsertValue = document.querySelector(\"#titleInsert\").value;\r\n");
      out.write("           \r\n");
      out.write("            if( titleInsertValue.length > 0 ){\r\n");
      out.write("            	isTitleInsertValid = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            let contentInsertValue= document.querySelector(\"#contentInsert\").value;\r\n");
      out.write("            if( contentInsertValue.length > 0 ){\r\n");
      out.write("            	isContentInsertValid = true;\r\n");
      out.write("            }\r\n");
      out.write("	\r\n");
      out.write("          \r\n");
      out.write("         \r\n");
      out.write("            if( isTitleInsertValid && isContentInsertValid ){\r\n");
      out.write("                return true;\r\n");
      out.write("            }\r\n");
      out.write("            return false;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function validateUpdate(){\r\n");
      out.write("            // return true / false\r\n");
      out.write("            let isTitleUpdateValid = false;\r\n");
      out.write("            let isContentUpdateValid = false;\r\n");
      out.write("\r\n");
      out.write("            let titleUpdateValue = document.querySelector(\"#titleUpdate\").value;\r\n");
      out.write("           \r\n");
      out.write("            if( titleUpdateValue.length > 0 ){\r\n");
      out.write("            	isTitleUpdateValid = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            let contentUpdateValue = document.querySelector(\"#contentUpdate\").value;\r\n");
      out.write("            if( contentUpdateValue.length > 0 ){\r\n");
      out.write("            	isContentUpdateValid = true;\r\n");
      out.write("            }\r\n");
      out.write("	\r\n");
      out.write("            \r\n");
      out.write("            if( isTitleUpdateValid && isContentUpdateValid ){\r\n");
      out.write("                return true;\r\n");
      out.write("            }\r\n");
      out.write("            return false;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        async function boardInsert() {\r\n");
      out.write("        	\r\n");
      out.write("        		console.log('boardInsert....');\r\n");
      out.write("        	  let title = document.querySelector(\"#titleInsert\").value;\r\n");
      out.write("              let content = document.querySelector(\"#contentInsert\").value;\r\n");
      out.write("  \r\n");
      out.write("              // parameter\r\n");
      out.write("              let urlParams = new URLSearchParams({\r\n");
      out.write("            	  title : title,\r\n");
      out.write("            	  content: content\r\n");
      out.write("              });\r\n");
      out.write("              // fetch options\r\n");
      out.write("              let fetchOptions = {\r\n");
      out.write("                  method: \"POST\",\r\n");
      out.write("                  body: urlParams\r\n");
      out.write("              }\r\n");
      out.write("              \r\n");
      out.write("              let url = \"");
      out.print(contextPath);
      out.write("/board/boardInsert\";\r\n");
      out.write("  				try{\r\n");
      out.write("  				   let response = await fetch( url , fetchOptions );\r\n");
      out.write("  	              let data = await response.json(); // json => javascript object <= JSON.parse()\r\n");
      out.write("  	              if( data.result == \"success\" ){ // login.jsp => boardMain.jsp로 페이지 이동 ( 새로운 페이지(html....) 요청)\r\n");
      out.write("  	            	  alertify.success(\"글이 등록되었습니다.\")\r\n");
      out.write("  	            	  boardList();\r\n");
      out.write("  	              }else if( data.result == \"fail\" ){\r\n");
      out.write("  	                  alertify.error('글 등록 과정에서 오류가 발생했습니다.');\r\n");
      out.write("  	              }\r\n");
      out.write("  				} catch(error){\r\n");
      out.write("                    alertify.error('글 등록 과정에서 오류가 발생했습니다.');\r\n");
      out.write("\r\n");
      out.write("  				}\r\n");
      out.write("           \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("		///////////////////////////////////////\r\n");
      out.write("\r\n");
      out.write("        async function boardUpdate() {\r\n");
      out.write("        	let boardId = document.querySelector(\"#boardUpdateModal\").getAttribute(\"data-boardId\");\r\n");
      out.write("      		let title = document.querySelector(\"#titleUpdate\").value;\r\n");
      out.write("            let content = document.querySelector(\"#contentUpdate\").value;\r\n");
      out.write("\r\n");
      out.write("            // parameter\r\n");
      out.write("            let urlParams = new URLSearchParams({\r\n");
      out.write("          		boardId: boardId,	\r\n");
      out.write("            	title : title,\r\n");
      out.write("          	  	content: content\r\n");
      out.write("            });\r\n");
      out.write("            // fetch options\r\n");
      out.write("            let fetchOptions = {\r\n");
      out.write("                method: \"POST\",\r\n");
      out.write("                body: urlParams\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            let url = \"");
      out.print(contextPath);
      out.write("/board/boardUpdate\";\r\n");
      out.write("				try{\r\n");
      out.write("				   let response = await fetch( url , fetchOptions );\r\n");
      out.write("	              let data = await response.json(); // json => javascript object <= JSON.parse()\r\n");
      out.write("	              if( data.result == \"success\" ){ // login.jsp => boardMain.jsp로 페이지 이동 ( 새로운 페이지(html....) 요청)\r\n");
      out.write("	            	  alertify.success(\"글이 수정되었습니다.\")\r\n");
      out.write("	            	  boardList();\r\n");
      out.write("	              }else if( data.result == \"fail\" ){\r\n");
      out.write("	                  alertify.error('글 수정 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	              }\r\n");
      out.write("				} catch(error){\r\n");
      out.write("                  alertify.error('글 수정 과정에서 오류가 발생했습니다.');\r\n");
      out.write("\r\n");
      out.write("				}\r\n");
      out.write("         \r\n");
      out.write("    	  }\r\n");
      out.write("        \r\n");
      out.write("        async function boardDelete() {\r\n");
      out.write("        	let boardId = document.querySelector(\"#boardDetailModal\").getAttribute(\"data-boardId\");\r\n");
      out.write("      	\r\n");
      out.write("            let url = \"");
      out.print(contextPath);
      out.write("/board/boardDelete\";\r\n");
      out.write("            let urlParams = \"?boardId=\" + boardId;\r\n");
      out.write("            \r\n");
      out.write("			try{\r\n");
      out.write("			   let response = await fetch( url + urlParams );\r\n");
      out.write("              let data = await response.json(); // json => javascript object <= JSON.parse()\r\n");
      out.write("              if( data.result == \"success\" ){ // login.jsp => boardMain.jsp로 페이지 이동 ( 새로운 페이지(html....) 요청)\r\n");
      out.write("            	  alertify.success(\"글이 삭제되었습니다.\")\r\n");
      out.write("            	  boardList();\r\n");
      out.write("              }else if( data.result == \"fail\" ){\r\n");
      out.write("                  alertify.error('글 삭제 과정에서 오류가 발생했습니다.');\r\n");
      out.write("              }\r\n");
      out.write("			} catch(error){\r\n");
      out.write("                 alertify.error('글 삭제 과정에서 오류가 발생했습니다.');\r\n");
      out.write("\r\n");
      out.write("			}\r\n");
      out.write("         \r\n");
      out.write("      }\r\n");
      out.write("  	\r\n");
      out.write("        async function logout() {\r\n");
      out.write("        	// logout 요청 => 백엔드에서는 session.invalidate(); result:success\r\n");
      out.write("        	// result가 success => login 페이지 이동 (ajax X, window.location.href 로 이동)\r\n");
      out.write("        	let url = \"");
      out.print( contextPath );
      out.write("/logout\";	\r\n");
      out.write("        	\r\n");
      out.write("			try{\r\n");
      out.write("				   let response = await fetch( url );\r\n");
      out.write("	              let data = await response.json(); // json => javascript object <= JSON.parse()\r\n");
      out.write("	              if( data.result == \"success\" ){ // login.jsp => boardMain.jsp로 페이지 이동 ( 새로운 페이지(html....) 요청)\r\n");
      out.write("	            	window.location.href = \"");
      out.print( contextPath);
      out.write("/jsp/login.jsp\";\r\n");
      out.write("	              }else if( data.result == \"fail\" ){\r\n");
      out.write("	                  alertify.error('로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	              }\r\n");
      out.write("				} catch(error){\r\n");
      out.write("               alertify.error('로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("\r\n");
      out.write("				}\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
