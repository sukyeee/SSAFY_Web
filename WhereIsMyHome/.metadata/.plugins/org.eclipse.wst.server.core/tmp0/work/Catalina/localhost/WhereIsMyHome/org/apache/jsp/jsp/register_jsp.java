/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-15 12:58:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import map.dto.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/jsp/./header.jsp", Long.valueOf(1665825200375L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("map.dto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\" />\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("  <title>Document</title>\r\n");
      out.write("  <link\r\n");
      out.write("    href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("    rel=\"stylesheet\"\r\n");
      out.write("    integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n");
      out.write("    crossorigin=\"anonymous\"\r\n");
      out.write("  />\r\n");
      out.write("  <script\r\n");
      out.write("    src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"\r\n");
      out.write("    integrity=\"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\"\r\n");
      out.write("    crossorigin=\"anonymous\"\r\n");
      out.write("  ></script>\r\n");
      out.write("  <script\r\n");
      out.write("    src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\"\r\n");
      out.write("    integrity=\"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\"\r\n");
      out.write("    crossorigin=\"anonymous\"\r\n");
      out.write("  ></script>\r\n");
      out.write("  \r\n");
      out.write("  <!-- JavaScript -->\r\n");
      out.write("<script src=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css\"/>\r\n");
      out.write("<!-- Default theme -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css\"/>\r\n");
      out.write("<!-- Semantic UI theme -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/semantic.min.css\"/>\r\n");
      out.write("<!-- Bootstrap theme -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.min.css\"/>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  	");
      out.write("\r\n");
      out.write(" \r\n");

    String contextPath = request.getContextPath();
	UserDto userDto = (UserDto)session.getAttribute("userDto");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic+Coding&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( contextPath );
      out.write("/css/header.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-light bg-light\">\r\n");
      out.write("\r\n");
      out.write("      <div id=\"nav-menu\">\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"nav-menu-left\">\r\n");
      out.write("		 		<button class=\"btn btn-sm btn-outline-secondary\" id=\"homeBtn\"><a href=\"");
      out.print( contextPath );
      out.write("/jsp/index.jsp\">Home</a></button>\r\n");
      out.write("			</div>\r\n");
      out.write("  			<div id=\"nav-menu-right\">\r\n");
      out.write("  				");
 if( userDto == null) { 
      out.write("\r\n");
      out.write("	  			<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"login-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/index.jsp\">login</a></button>\r\n");
      out.write("		       	<button class=\"btn btn-sm btn-outline-secondary\" type=\"button\" id=\"register-btn\" ><a href=\"");
      out.print(contextPath );
      out.write("/jsp/register.jsp\">register</a></button>\r\n");
      out.write("		        ");
 } else { 
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary parking\"> <a  aria-current=\"page\" id=\"parking\" href=\"");
      out.print(contextPath );
      out.write("/jsp/map/mapParking.jsp\">Favorite Area Parking Info</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"logout\"href=\"#\">logout</a></button>\r\n");
      out.write("                <button class=\"btn btn-sm btn-outline-secondary\"><a  aria-current=\"page\" id=\"myPage\" href=\"");
      out.print(contextPath );
      out.write("/user/userMain\">mypage</a></button>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("  				");
 } 
      out.write("\r\n");
      out.write("  			</div>\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("            <!-- 로그인 전 -->\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            	\r\n");
      out.write("   		</div>\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write(" \r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	document.querySelector(\"#logout\").onclick = function(){\r\n");
      out.write("		logout();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	async function logout(){\r\n");
      out.write("	let url = \"");
      out.print( contextPath);
      out.write("/logout\";\r\n");
      out.write("	\r\n");
      out.write("	try{\r\n");
      out.write("	    let response = await fetch( url ); \r\n");
      out.write("	    let data = await response.json(); \r\n");
      out.write("	    if( data.result == \"fail\"){ \r\n");
      out.write("	      window.location.href = \"");
      out.print( contextPath);
      out.write("/jsp/login.jsp\";\r\n");
      out.write("	    }else if( data.result == \"fail\"){\r\n");
      out.write("	    	alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	    }            	\r\n");
      out.write("	}catch(error){\r\n");
      out.write("		alertify.alert(\"오류\",'로그아웃 과정에서 오류가 발생했습니다.');\r\n");
      out.write("	}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("    \r\n");
      out.write("        <div class=\"row\" style=\"height:85vh;\">\r\n");
      out.write("            <div class=\"col-3\"></div>\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("              <h2 class=\"text-center mt-5 mb-3\">회원가입</h2>\r\n");
      out.write("                <form>\r\n");
      out.write("                      <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"exampleInputPassword1\" class=\"form-label\">E-Mail</label>\r\n");
      out.write("                        <input type=\"text\" id=\"userEmail\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n");
      out.write("                      </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                      <label for=\"exampleInputPassword1\" class=\"form-label\" >Password</label>\r\n");
      out.write("                      <input type=\"password\" id=\"userPassword\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"exampleInputPassword1\" class=\"form-label\">Name</label>\r\n");
      out.write("                        <input type=\"text\" id=\"userName\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"mb-3\">\r\n");
      out.write("                      \r\n");
      out.write("                      \r\n");
      out.write("                      \r\n");
      out.write("               \r\n");
      out.write("        <div class=\"row\" id=\"deal-header\"> \r\n");
      out.write("            <div class=\"col-2 mb-2\">관심지역 </div>\r\n");
      out.write("            <div class=\"col-2 mb-2\"> 서울 > </div>\r\n");
      out.write("            <div class=\"col-3 mb-2 me-4\">\r\n");
      out.write("            <select id=\"gugun-select\" class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\r\n");
      out.write("                <option value=\"11110\">종로구</option>\r\n");
      out.write("              <option value=\"11140\">중구</option>\r\n");
      out.write("              <option value=\"11170\">용산구</option>\r\n");
      out.write("              <option  value=\"11200\">성동구</option>\r\n");
      out.write("              <option  value=\"11215\">광진구</option>\r\n");
      out.write("              <option  value=\"11230\">동대문구</option>\r\n");
      out.write("              <option  value=\"11260\">중랑구</option>\r\n");
      out.write("              <option  value=\"11290\">성북구</option>\r\n");
      out.write("              <option  value=\"11305\">강북구</option>\r\n");
      out.write("              <option  value=\"11320\">도봉구</option>\r\n");
      out.write("              <option  value=\"11350\">노원구</option>\r\n");
      out.write("              <option value=\"11380\">은평구</option>\r\n");
      out.write("              <option value=\"11410\">서대문구</option>\r\n");
      out.write("              <option  value=\"11440\">마포구</option>\r\n");
      out.write("              <option  value=\"11470\">양천구</option>\r\n");
      out.write("              <option  value=\"11500\">강서구</option>\r\n");
      out.write("              <option  value=\"11530\">구로구</option>\r\n");
      out.write("              <option  value=\"11545\">금천구</option>\r\n");
      out.write("              <option  value=\"11560\">영등포구</option>\r\n");
      out.write("              <option  value=\"11590\">동작구</option>\r\n");
      out.write("              <option  value=\"11620\">관악구</option>\r\n");
      out.write("              <option  value=\"11650\">서초구</option>\r\n");
      out.write("              <option  value=\"11680\">강남구</option>\r\n");
      out.write("              <option  value=\"11710\">송파구</option>\r\n");
      out.write("              <option  value=\"11740\">강동구</option>\r\n");
      out.write("            </select>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-3 mb-2 me-4\">\r\n");
      out.write("             <select id=\"dong-select\" class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\r\n");
      out.write("             ...\r\n");
      out.write("             </select>\r\n");
      out.write("             </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <hr>\r\n");
      out.write("   			<p>회원 구분</p>\r\n");
      out.write("			<div id=\"radio\">\r\n");
      out.write("			\r\n");
      out.write("			</div> \r\n");
      out.write("                      \r\n");
      out.write("                      \r\n");
      out.write("                      \r\n");
      out.write("                      \r\n");
      out.write("                      \r\n");
      out.write("                      </div>\r\n");
      out.write("                    <button type=\"button\" id=\"btnRegister\" class=\"btn btn-primary\">Sign Up</button>\r\n");
      out.write("                  </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-3\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <footer class=\"navbar navbar-expand-lg navbar-light bg-light container justify-content-end\">\r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("        <ul class=\"navbar-nav\"> \r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">사이트 소개</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">개인정보처리방침</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">이용약관</a></li>\r\n");
      out.write("          <li><a href=\"#\" class=\"nav-link text-secondary\">오시는길</a></li>\r\n");
      out.write("          <li><label class=\"nav-link text-secondary\">&copy; SaveHomes Corp.</label></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("    window.onload = function(){\r\n");
      out.write("        let gugun_select = document.querySelector(\"#gugun-select\");\r\n");
      out.write("        gugun_select.onchange = function(){\r\n");
      out.write("            let value = (gugun_select.options[gugun_select.selectedIndex].value);\r\n");
      out.write("            dongList(Number(value));\r\n");
      out.write("        }\r\n");
      out.write("     \r\n");
      out.write("        dd();\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //GET\r\n");
      out.write("    async function dongList(gugun){\r\n");
      out.write("        let url = '");
      out.print( contextPath );
      out.write("/map/mapDongSelect';\r\n");
      out.write("        let urlParams = '?gugunCode=' + gugun ;\r\n");
      out.write("\r\n");
      out.write("        let fetchOptions = {\r\n");
      out.write("            method: 'GET',\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        try{\r\n");
      out.write("            let response = await fetch( url + urlParams);\r\n");
      out.write("            let data = await response.json();\r\n");
      out.write("            \r\n");
      out.write("            makeDongSelectHtml( data );    \r\n");
      out.write("        }catch( error ){\r\n");
      out.write("            console.log(error);\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function makeDongSelectHtml(list){\r\n");
      out.write("        let listHtml = ``;\r\n");
      out.write("        \r\n");
      out.write("        list.forEach( el => {\r\n");
      out.write("            let code = el.code;\r\n");
      out.write("            let dong = el.name;\r\n");
      out.write("            listHtml +=\r\n");
      out.write("                '<option value=' + code + '>' + dong + '</option>';\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        document.querySelector(\"#dong-select\").innerHTML = listHtml;\r\n");
      out.write("        \r\n");
      out.write("        //makeListHtmlEventHandler();\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    async function dd(){\r\n");
      out.write("        let url = '");
      out.print( contextPath );
      out.write("/code/grade';\r\n");
      out.write("        let urlParams = '?code=001';\r\n");
      out.write("\r\n");
      out.write("        let fetchOptions = {\r\n");
      out.write("            method: 'GET',\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        try{\r\n");
      out.write("            let response = await fetch( url + urlParams);\r\n");
      out.write("            let data = await response.json();\r\n");
      out.write("            \r\n");
      out.write("            console.log(data);\r\n");
      out.write("            makeCodeHtml(data);\r\n");
      out.write("        }catch( error ){\r\n");
      out.write("            console.log(error);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function makeCodeHtml(list){\r\n");
      out.write("    	let listHtml = ``;\r\n");
      out.write("    	\r\n");
      out.write("    	list.forEach( el => {\r\n");
      out.write("    		let code = el.childCode;\r\n");
      out.write("    		let name = el.childName;\r\n");
      out.write("    		listHtml +=\r\n");
      out.write("    		   \"<label><input type=radio name=code value=\"+name+\">\"+name+\"</label>\"\r\n");
      out.write("   \r\n");
      out.write("    	});\r\n");
      out.write("    	\r\n");
      out.write("    	document.querySelector(\"#radio\").innerHTML = listHtml;\r\n");
      out.write("    	\r\n");
      out.write("    	//makeListHtmlEventHandler();\r\n");
      out.write("    }\r\n");
      out.write("      document.querySelector(\"#btnRegister\").addEventListener(\"click\", btnRegisterClickListener);\r\n");
      out.write("\r\n");
      out.write("      function btnRegisterClickListener(e) {\r\n");
      out.write("        const userEmail = document.querySelector(\"#userEmail\").value;\r\n");
      out.write("        const userPassword = document.querySelector(\"#userPassword\").value;\r\n");
      out.write("        const userName = document.querySelector(\"#userName\").value;\r\n");
      out.write("        let interestCode = document.querySelector(\"#dong-select\").value;\r\n");
      out.write("        let commonName = document.querySelector(\"input[name='code']:checked\").value;\r\n");
      out.write("        \r\n");
      out.write("        console.log(commonName);\r\n");
      out.write("        \r\n");
      out.write("           register(userEmail, userPassword, userName, interestCode, commonName); \r\n");
      out.write("        }\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      async function register(userEmail, userPassword, userName, interestCode, commonName) {\r\n");
      out.write("        const urlParams = new URLSearchParams({\r\n");
      out.write("          userEmail,\r\n");
      out.write("          userPassword,\r\n");
      out.write("          userName,\r\n");
      out.write("          interestCode,\r\n");
      out.write("          commonName\r\n");
      out.write("       });\r\n");
      out.write("\r\n");
      out.write("        const fetchOptions = {\r\n");
      out.write("          method: \"POST\",\r\n");
      out.write("          body: urlParams,\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        const response = await fetch(\"");
      out.print( contextPath);
      out.write("/register\", fetchOptions);\r\n");
      out.write("        const data = await response.json(); // json => javascript object <= JSON.parse()\r\n");
      out.write("        console.log(data);\r\n");
      out.write("        if (data.result === \"success\") {\r\n");
      out.write("          // login.jsp => boardMain.jsp로 페이지 이동 (새로운 페이지(html...) 요청)\r\n");
      out.write("          window.location.href = \"");
      out.print( contextPath);
      out.write("/jsp/login.jsp\";\r\n");
      out.write("  \r\n");
      out.write("        } else if (data.result === \"fail\") {\r\n");
      out.write("          alertify.alert(\"오류\",\"중복된 이메일이 존재합니다.\");\r\n");
      out.write("        } \r\n");
      out.write("      }\r\n");
      out.write("     \r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
